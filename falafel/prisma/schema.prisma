datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:postgres@localhost:5432/zxffo"
}

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../src/generated/type-graphql"
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  username    String   @unique
  displayname String
  email       String   @unique
  /// @TypeGraphQL.omit(output: true)
  password    String
  followedBy  User[]   @relation("UserFollows", references: [id])
  following   User[]   @relation("UserFollows", references: [id])
  role        UserRole @default(USER)
  tweets      Tweet[]
  likes       Like[]
}

model Tweet {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  text          String
  image         String?
  authorId      Int
  author        User     @relation(fields: [authorId], references: [id])
  commentAmount Int      @default(0)
  retweetAmount Int      @default(0)
  likeAmount    Int      @default(0)
  likes         Like[]

}

model Like {
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  tweetId   Int // relation scalar field (used in the `@relation` attribute above)
  user      User     @relation(fields: [userId], references: [id])
  userId    Int // relation scalar field (used in the `@relation` attribute above)
  createdAt DateTime @default(now())

  @@id([tweetId, userId])
}
